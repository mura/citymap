// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.versions = [
            'compileSdk'         : 30,
            'minSdk'             : 21,
            'targetSdk'          : 30,
            'kotlin'             : '1.5.10',
            'coroutines'         : '1.5.0-native-mt',
            'dagger_hilt'        : '2.37',
            'androidx_lifecycle' : '2.3.1',
            'androidx_room'      : '2.3.0',
            'androidx_navigation': '2.3.5',
            'androidx_paging'    : '3.0.0',
            'androidx_hilt'      : '1.0.0'
    ]
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.4'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.0'
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.androidx_navigation"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$versions.dagger_hilt"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                // Do not change the username below.
                // This should always be `mapbox` (not your username).
                username = 'mapbox'
                // Use the secret token you stored in gradle.properties as the password
                password = project.properties['MAPBOX_DOWNLOADS_TOKEN'] ?: ""
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
